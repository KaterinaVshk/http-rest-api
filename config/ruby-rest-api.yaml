swagger: "2.0"
info:
  description: "This is a companies and employees management app"
  version: "1.0.0"
  title: "Company manager"
  contact:
    email: "hr@qulix.com"
host: "employees.qulix.com"
basePath: "/v2"
tags:
- name: "employee"
  description: "Everything about your employees"
- name: "company"
  description: "Access to company info and its employees"
schemes:
- "http"
paths:
  /employee:
    post:
      tags:
      - "employee"
      summary: "Add a new employee to the company"
      description: ""
      operationId: "addemployee"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "employee object that needs to be added to the company"
        required: true
        schema:
          $ref: "#/definitions/Employee"
      responses:
        "405":
          description: "Invalid input"
    put:
      tags:
      - "employee"
      summary: "Update an existing employee"
      description: ""
      operationId: "updateemployee"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "employee object that needs to update exiting record"
        required: true
        schema:
          $ref: "#/definitions/Employee"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Employee not found"
        "405":
          description: "Validation exception"
  /employee/{employeeId}:
    get:
      tags:
      - "employee"
      summary: "Find employee by ID"
      description: "Returns a single employee"
      operationId: "getEmployeeById"
      produces:
      - "application/json"
      parameters:
      - name: "employeeId"
        in: "path"
        description: "ID of employee to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Employee"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Employee not found"
    post:
      tags:
      - "employee"
      summary: "Updates a employee in the company with form data"
      description: ""
      operationId: "updateEmployeeWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "employeeId"
        in: "path"
        description: "ID of employee that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "companyId"
        in: "formData"
        description: "Company ID of employee that needs to be updated"
        required: false
        type: "integer"
        format: "int64"
      - name: "name"
        in: "formData"
        description: "Updated name of the employee"
        required: false
        type: "string"
      - name: "secondName"
        in: "formData"
        description: "Updated second name of the employee"
        required: false
        type: "string"
      - name: "surname"
        in: "formData"
        description: "Updated surname of the employee"
        required: false
        type: "string"
      - name: "hireDate"
        in: "formData"
        description: "Updated hire date of the employee"
        required: false
        type: "string"
        format: "date"
      - name: "position"
        in: "formData"
        description: "Updated position of the employee"
        required: false
        type: "string"
      responses:
        "405":
          description: "Invalid input"
    delete:
      tags:
      - "employee"
      summary: "Deletes an employee"
      description: ""
      operationId: "deleteEmployee"
      produces:
      - "application/json"
      parameters:
      - name: "employeeId"
        in: "path"
        description: "employee id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Employee not found"
  /company/:
    post:
      tags:
      - "company"
      summary: "Place a company"
      description: ""
      operationId: "placeCompany"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "company added to the system"
        required: true
        schema:
          $ref: "#/definitions/Company"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Company"
        "400":
          description: "Invalid Company"
    put:
      tags:
      - "company"
      summary: "Update an existing company"
      description: ""
      operationId: "updatecompany"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "company object that needs to be added to the company"
        required: true
        schema:
          $ref: "#/definitions/Company"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Company not found"
        "405":
          description: "Validation exception"
  /company/{companyId}:
    get:
      tags:
      - "company"
      summary: "Find company by ID"
      description: "For valid response try integer IDs with value >= 1. Other values will generated exceptions"
      operationId: "getCompanyById"
      produces:
      - "application/json"
      parameters:
      - name: "companyId"
        in: "path"
        description: "ID of company that needs to be fetched"
        required: true
        type: "integer"
        minimum: 1.0
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Company"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Company not found"
    post:
      tags:
      - "company"
      summary: "Updates company with form data"
      description: ""
      operationId: "updateCompanyWithForm"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "companyId"
        in: "path"
        description: "ID of company that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "name"
        in: "formData"
        description: "Updated name of the company"
        required: false
        type: "string"
      - name: "status"
        in: "formData"
        description: "Updated status of the company"
        required: false
        type: "string"
      responses:
        "405":
          description: "Invalid input"
    delete:
      tags:
      - "company"
      summary: "Delete company by ID"
      description: "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors"
      operationId: "deleteCompany"
      produces:
      - "application/json"
      parameters:
      - name: "companyId"
        in: "path"
        description: "ID of the company that needs to be deleted"
        required: true
        type: "integer"
        minimum: 1.0
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Company not found"
  /company/{companyId}/employees:
    get:
      tags:
      - "company"
      summary: "Get list of employees of a company"
      description: "For valid response try integer IDs with value >= 1. Other values will generated exceptions"
      operationId: "getEmployeesByCompanyId"
      produces:
      - "application/json"
      parameters:
      - name: "companyId"
        in: "path"
        description: "ID of company that needs to be fetched"
        required: true
        type: "integer"
        minimum: 1.0
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ArrayOfEmployees"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Company not found"
definitions:
  Company:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Qulix Systems"
      legalForm:
        type: "string"
        description: "Company legal form (OOO, ZAO, IP)"
    xml:
      name: "Company"
  Employee:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Aaron"
      secondName:
        type: "string"
        example: "Glen"
      surname:
        type: "string"
        example: "Smith"
      hireDate:
        type: "string"
        format: "date"
        example: "2020-09-01"
      position:
        type: "string"
        description: "employee position in the company"
        enum:
        - "developer"
        - "manager"
        - "quality assurance"
        - "business analyst"
      companyId:
        type: "integer"
        format: "int64"
        description: "ID of a company hired by"
        example: 1
    xml:
      name: "employee"
  ArrayOfEmployees:
    type: "array"
    items:
          $ref: "#/definitions/Employee"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"